%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

tic0 = tic;
% Save empty dates and dseries objects in memory.
dates('initialize');
dseries('initialize');
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info ys0_ ex0_
options_ = [];
M_.fname = 'BGGflexi';
M_.dynare_version = '4.5.4';
oo_.dynare_version = '4.5.4';
options_.dynare_version = '4.5.4';
%
% Some global variables initialization
%
global_initialization;
diary off;
diary('BGGflexi.log');
M_.exo_names = 'e_A';
M_.exo_names_tex = 'e\_A';
M_.exo_names_long = 'e_A';
M_.exo_names = char(M_.exo_names, 'e_G');
M_.exo_names_tex = char(M_.exo_names_tex, 'e\_G');
M_.exo_names_long = char(M_.exo_names_long, 'e_G');
M_.exo_names = char(M_.exo_names, 'e_KQ');
M_.exo_names_tex = char(M_.exo_names_tex, 'e\_KQ');
M_.exo_names_long = char(M_.exo_names_long, 'e_KQ');
M_.exo_names = char(M_.exo_names, 'e_RS');
M_.exo_names_tex = char(M_.exo_names_tex, 'e\_RS');
M_.exo_names_long = char(M_.exo_names_long, 'e_RS');
M_.endo_names = 'C';
M_.endo_names_tex = 'C';
M_.endo_names_long = 'C';
M_.endo_names = char(M_.endo_names, 'Uc');
M_.endo_names_tex = char(M_.endo_names_tex, 'Uc');
M_.endo_names_long = char(M_.endo_names_long, 'Uc');
M_.endo_names = char(M_.endo_names, 'Lambda');
M_.endo_names_tex = char(M_.endo_names_tex, 'Lambda');
M_.endo_names_long = char(M_.endo_names_long, 'Lambda');
M_.endo_names = char(M_.endo_names, 'Lab');
M_.endo_names_tex = char(M_.endo_names_tex, 'Lab');
M_.endo_names_long = char(M_.endo_names_long, 'Lab');
M_.endo_names = char(M_.endo_names, 'R');
M_.endo_names_tex = char(M_.endo_names_tex, 'R');
M_.endo_names_long = char(M_.endo_names_long, 'R');
M_.endo_names = char(M_.endo_names, 'Y');
M_.endo_names_tex = char(M_.endo_names_tex, 'Y');
M_.endo_names_long = char(M_.endo_names_long, 'Y');
M_.endo_names = char(M_.endo_names, 'K');
M_.endo_names_tex = char(M_.endo_names_tex, 'K');
M_.endo_names_long = char(M_.endo_names_long, 'K');
M_.endo_names = char(M_.endo_names, 'W');
M_.endo_names_tex = char(M_.endo_names_tex, 'W');
M_.endo_names_long = char(M_.endo_names_long, 'W');
M_.endo_names = char(M_.endo_names, 'Z');
M_.endo_names_tex = char(M_.endo_names_tex, 'Z');
M_.endo_names_long = char(M_.endo_names_long, 'Z');
M_.endo_names = char(M_.endo_names, 'A');
M_.endo_names_tex = char(M_.endo_names_tex, 'A');
M_.endo_names_long = char(M_.endo_names_long, 'A');
M_.endo_names = char(M_.endo_names, 'Rk');
M_.endo_names_tex = char(M_.endo_names_tex, 'Rk');
M_.endo_names_long = char(M_.endo_names_long, 'Rk');
M_.endo_names = char(M_.endo_names, 'Rl');
M_.endo_names_tex = char(M_.endo_names_tex, 'Rl');
M_.endo_names_long = char(M_.endo_names_long, 'Rl');
M_.endo_names = char(M_.endo_names, 'Ne');
M_.endo_names_tex = char(M_.endo_names_tex, 'Ne');
M_.endo_names_long = char(M_.endo_names_long, 'Ne');
M_.endo_names = char(M_.endo_names, 'phie');
M_.endo_names_tex = char(M_.endo_names_tex, 'phie');
M_.endo_names_long = char(M_.endo_names_long, 'phie');
M_.endo_names = char(M_.endo_names, 'Le');
M_.endo_names_tex = char(M_.endo_names_tex, 'Le');
M_.endo_names_long = char(M_.endo_names_long, 'Le');
M_.endo_names = char(M_.endo_names, 'Ce');
M_.endo_names_tex = char(M_.endo_names_tex, 'Ce');
M_.endo_names_long = char(M_.endo_names_long, 'Ce');
M_.endo_names = char(M_.endo_names, 'rho');
M_.endo_names_tex = char(M_.endo_names_tex, 'rho');
M_.endo_names_long = char(M_.endo_names_long, 'rho');
M_.endo_names = char(M_.endo_names, 'rhoRex');
M_.endo_names_tex = char(M_.endo_names_tex, 'rhoRex');
M_.endo_names_long = char(M_.endo_names_long, 'rhoRex');
M_.endo_names = char(M_.endo_names, 'omega');
M_.endo_names_tex = char(M_.endo_names_tex, 'omega');
M_.endo_names_long = char(M_.endo_names_long, 'omega');
M_.endo_names = char(M_.endo_names, 'I');
M_.endo_names_tex = char(M_.endo_names_tex, 'I');
M_.endo_names_long = char(M_.endo_names_long, 'I');
M_.endo_names = char(M_.endo_names, 'Q');
M_.endo_names_tex = char(M_.endo_names_tex, 'Q');
M_.endo_names_long = char(M_.endo_names_long, 'Q');
M_.endo_names = char(M_.endo_names, 'psi');
M_.endo_names_tex = char(M_.endo_names_tex, 'psi');
M_.endo_names_long = char(M_.endo_names_long, 'psi');
M_.endo_names = char(M_.endo_names, 'G');
M_.endo_names_tex = char(M_.endo_names_tex, 'G');
M_.endo_names_long = char(M_.endo_names_long, 'G');
M_.endo_names = char(M_.endo_names, 'T');
M_.endo_names_tex = char(M_.endo_names_tex, 'T');
M_.endo_names_long = char(M_.endo_names_long, 'T');
M_.endo_names = char(M_.endo_names, 'spread');
M_.endo_names_tex = char(M_.endo_names_tex, 'spread');
M_.endo_names_long = char(M_.endo_names_long, 'spread');
M_.endo_names = char(M_.endo_names, 'sigmae');
M_.endo_names_tex = char(M_.endo_names_tex, 'sigmae');
M_.endo_names_long = char(M_.endo_names_long, 'sigmae');
M_.endo_names = char(M_.endo_names, 'sigma_omega');
M_.endo_names_tex = char(M_.endo_names_tex, 'sigma\_omega');
M_.endo_names_long = char(M_.endo_names_long, 'sigma_omega');
M_.endo_names = char(M_.endo_names, 'sigma_omega_ss');
M_.endo_names_tex = char(M_.endo_names_tex, 'sigma\_omega\_ss');
M_.endo_names_long = char(M_.endo_names_long, 'sigma_omega_ss');
M_.endo_names = char(M_.endo_names, 'mon');
M_.endo_names_tex = char(M_.endo_names_tex, 'mon');
M_.endo_names_long = char(M_.endo_names_long, 'mon');
M_.endo_names = char(M_.endo_names, 'bankrupt');
M_.endo_names_tex = char(M_.endo_names_tex, 'bankrupt');
M_.endo_names_long = char(M_.endo_names_long, 'bankrupt');
M_.endo_names = char(M_.endo_names, 'Sg');
M_.endo_names_tex = char(M_.endo_names_tex, 'Sg');
M_.endo_names_long = char(M_.endo_names_long, 'Sg');
M_.endo_names = char(M_.endo_names, 'YY');
M_.endo_names_tex = char(M_.endo_names_tex, 'YY');
M_.endo_names_long = char(M_.endo_names_long, 'YY');
M_.endo_names = char(M_.endo_names, 'CC');
M_.endo_names_tex = char(M_.endo_names_tex, 'CC');
M_.endo_names_long = char(M_.endo_names_long, 'CC');
M_.endo_names = char(M_.endo_names, 'II');
M_.endo_names_tex = char(M_.endo_names_tex, 'II');
M_.endo_names_long = char(M_.endo_names_long, 'II');
M_.endo_names = char(M_.endo_names, 'WW');
M_.endo_names_tex = char(M_.endo_names_tex, 'WW');
M_.endo_names_long = char(M_.endo_names_long, 'WW');
M_.endo_names = char(M_.endo_names, 'RR');
M_.endo_names_tex = char(M_.endo_names_tex, 'RR');
M_.endo_names_long = char(M_.endo_names_long, 'RR');
M_.endo_names = char(M_.endo_names, 'QQ');
M_.endo_names_tex = char(M_.endo_names_tex, 'QQ');
M_.endo_names_long = char(M_.endo_names_long, 'QQ');
M_.endo_names = char(M_.endo_names, 'RkRk');
M_.endo_names_tex = char(M_.endo_names_tex, 'RkRk');
M_.endo_names_long = char(M_.endo_names_long, 'RkRk');
M_.endo_names = char(M_.endo_names, 'NeNe');
M_.endo_names_tex = char(M_.endo_names_tex, 'NeNe');
M_.endo_names_long = char(M_.endo_names_long, 'NeNe');
M_.endo_names = char(M_.endo_names, 'spreadspread');
M_.endo_names_tex = char(M_.endo_names_tex, 'spreadspread');
M_.endo_names_long = char(M_.endo_names_long, 'spreadspread');
M_.endo_names = char(M_.endo_names, 'KK');
M_.endo_names_tex = char(M_.endo_names_tex, 'KK');
M_.endo_names_long = char(M_.endo_names_long, 'KK');
M_.endo_names = char(M_.endo_names, 'rhorho');
M_.endo_names_tex = char(M_.endo_names_tex, 'rhorho');
M_.endo_names_long = char(M_.endo_names_long, 'rhorho');
M_.endo_names = char(M_.endo_names, 'LabLab');
M_.endo_names_tex = char(M_.endo_names_tex, 'LabLab');
M_.endo_names_long = char(M_.endo_names_long, 'LabLab');
M_.endo_names = char(M_.endo_names, 'phiephie');
M_.endo_names_tex = char(M_.endo_names_tex, 'phiephie');
M_.endo_names_long = char(M_.endo_names_long, 'phiephie');
M_.endo_names = char(M_.endo_names, 'psipsi');
M_.endo_names_tex = char(M_.endo_names_tex, 'psipsi');
M_.endo_names_long = char(M_.endo_names_long, 'psipsi');
M_.endo_names = char(M_.endo_names, 'LeLe');
M_.endo_names_tex = char(M_.endo_names_tex, 'LeLe');
M_.endo_names_long = char(M_.endo_names_long, 'LeLe');
M_.endo_partitions = struct();
M_.param_names = 'alphha';
M_.param_names_tex = 'alphha';
M_.param_names_long = 'alphha';
M_.param_names = char(M_.param_names, 'betta');
M_.param_names_tex = char(M_.param_names_tex, 'betta');
M_.param_names_long = char(M_.param_names_long, 'betta');
M_.param_names = char(M_.param_names, 'gammma');
M_.param_names_tex = char(M_.param_names_tex, 'gammma');
M_.param_names_long = char(M_.param_names_long, 'gammma');
M_.param_names = char(M_.param_names, 'chil');
M_.param_names_tex = char(M_.param_names_tex, 'chil');
M_.param_names_long = char(M_.param_names_long, 'chil');
M_.param_names = char(M_.param_names, 'epsl');
M_.param_names_tex = char(M_.param_names_tex, 'epsl');
M_.param_names_long = char(M_.param_names_long, 'epsl');
M_.param_names = char(M_.param_names, 'delta');
M_.param_names_tex = char(M_.param_names_tex, 'delta');
M_.param_names_long = char(M_.param_names_long, 'delta');
M_.param_names = char(M_.param_names, 'ksie');
M_.param_names_tex = char(M_.param_names_tex, 'ksie');
M_.param_names_long = char(M_.param_names_long, 'ksie');
M_.param_names = char(M_.param_names, 'eta');
M_.param_names_tex = char(M_.param_names_tex, 'eta');
M_.param_names_long = char(M_.param_names_long, 'eta');
M_.param_names = char(M_.param_names, 'taf');
M_.param_names_tex = char(M_.param_names_tex, 'taf');
M_.param_names_long = char(M_.param_names_long, 'taf');
M_.param_names = char(M_.param_names, 'G_over_Y');
M_.param_names_tex = char(M_.param_names_tex, 'G\_over\_Y');
M_.param_names_long = char(M_.param_names_long, 'G_over_Y');
M_.param_names = char(M_.param_names, 'phiX');
M_.param_names_tex = char(M_.param_names_tex, 'phiX');
M_.param_names_long = char(M_.param_names_long, 'phiX');
M_.param_names = char(M_.param_names, 'kpY');
M_.param_names_tex = char(M_.param_names_tex, 'kpY');
M_.param_names_long = char(M_.param_names_long, 'kpY');
M_.param_names = char(M_.param_names, 'kpP');
M_.param_names_tex = char(M_.param_names_tex, 'kpP');
M_.param_names_long = char(M_.param_names_long, 'kpP');
M_.param_names = char(M_.param_names, 'els');
M_.param_names_tex = char(M_.param_names_tex, 'els');
M_.param_names_long = char(M_.param_names_long, 'els');
M_.param_names = char(M_.param_names, 'gam');
M_.param_names_tex = char(M_.param_names_tex, 'gam');
M_.param_names_long = char(M_.param_names_long, 'gam');
M_.param_names = char(M_.param_names, 'sig');
M_.param_names_tex = char(M_.param_names_tex, 'sig');
M_.param_names_long = char(M_.param_names_long, 'sig');
M_.param_names = char(M_.param_names, 'rhosigma');
M_.param_names_tex = char(M_.param_names_tex, 'rhosigma');
M_.param_names_long = char(M_.param_names_long, 'rhosigma');
M_.param_names = char(M_.param_names, 'rhog');
M_.param_names_tex = char(M_.param_names_tex, 'rhog');
M_.param_names_long = char(M_.param_names_long, 'rhog');
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 4;
M_.endo_nbr = 46;
M_.param_nbr = 18;
M_.orig_endo_nbr = 46;
M_.aux_vars = [];
M_.Sigma_e = zeros(4, 4);
M_.Correlation_matrix = eye(4, 4);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = 1;
M_.det_shocks = [];
options_.block=0;
options_.bytecode=0;
options_.use_dll=0;
M_.hessian_eq_zero = 1;
erase_compiled_function('BGGflexi_static');
erase_compiled_function('BGGflexi_dynamic');
M_.orig_eq_nbr = 46;
M_.eq_nbr = 46;
M_.ramsey_eq_nbr = 0;
M_.set_auxiliary_variables = exist(['./' M_.fname '_set_auxiliary_variables.m'], 'file') == 2;
M_.lead_lag_incidence = [
 0 12 0;
 1 13 0;
 0 14 58;
 0 15 0;
 2 16 0;
 0 17 0;
 3 18 0;
 0 19 0;
 0 20 0;
 4 21 0;
 0 22 59;
 0 23 0;
 5 24 0;
 0 25 0;
 6 26 0;
 0 27 0;
 0 28 0;
 0 29 60;
 0 30 0;
 7 31 61;
 8 32 0;
 9 33 0;
 0 34 0;
 0 35 0;
 0 36 0;
 0 37 0;
 10 38 0;
 0 39 0;
 0 40 0;
 0 41 0;
 11 42 0;
 0 43 0;
 0 44 0;
 0 45 0;
 0 46 0;
 0 47 62;
 0 48 0;
 0 49 63;
 0 50 0;
 0 51 0;
 0 52 0;
 0 53 0;
 0 54 0;
 0 55 0;
 0 56 0;
 0 57 0;]';
M_.nstatic = 30;
M_.nfwrd   = 5;
M_.npred   = 10;
M_.nboth   = 1;
M_.nsfwrd   = 6;
M_.nspred   = 11;
M_.ndynamic   = 16;
M_.equations_tags = {
};
M_.static_and_dynamic_models_differ = 0;
M_.exo_names_orig_ord = [1:4];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(46, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(4, 1);
M_.params = NaN(18, 1);
M_.NNZDerivatives = [148; -1; -1];
M_.params( 7 ) = 0.0102;
ksie = M_.params( 7 );
M_.params( 1 ) = 0.33;
alphha = M_.params( 1 );
M_.params( 2 ) = 0.99;
betta = M_.params( 2 );
M_.params( 3 ) = 0.500;
gammma = M_.params( 3 );
M_.params( 6 ) = 0.025;
delta = M_.params( 6 );
M_.params( 4 ) = 5.584;
chil = M_.params( 4 );
M_.params( 5 ) = 0.333;
epsl = M_.params( 5 );
M_.params( 8 ) = 1.5;
eta = M_.params( 8 );
M_.params( 10 ) = 0.2;
G_over_Y = M_.params( 10 );
M_.params( 17 ) = 0.97;
rhosigma = M_.params( 17 );
M_.params( 18 ) = 0.97;
rhog = M_.params( 18 );
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(1, 1) = (1)^2;
M_.Sigma_e(2, 2) = (1)^2;
M_.Sigma_e(3, 3) = (1)^2;
M_.Sigma_e(4, 4) = (1)^2;
steady;
resid(1); 
oo_.dr.eigval = check(M_,options_,oo_);
options_.nograph        = 1;
options_.irf = 40;
options_.order = 1;
options_.periods = 10000;
var_list_ = char();
info = stoch_simul(var_list_);
save('BGGflexi_results.mat', 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save('BGGflexi_results.mat', 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save('BGGflexi_results.mat', 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save('BGGflexi_results.mat', 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save('BGGflexi_results.mat', 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save('BGGflexi_results.mat', 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save('BGGflexi_results.mat', 'oo_recursive_', '-append');
end


disp(['Total computing time : ' dynsec2hms(toc(tic0)) ]);
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
diary off
